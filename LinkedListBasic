package Tuf;
class Node{
	int data;
	Node next;
	
	Node(int data1,Node next1){
		this.data = data1;
		this.next = next1;
	}
	Node(int data1){
		this.data = data1;
	}
}

public class ll_basic {
	
	private static Node Arr_to_ll(int[] arr) { //Node because we are returning pointer to the head
		Node head = new Node(arr[0]);
		Node mover = head;
		for(int i=1;i<arr.length;i++) {
			Node temp = new Node (arr[i]);
			mover.next = temp; // connecting 
			mover = temp;
		}
		return head;
	}
	
	private static int findnum(Node head, int num) {
		Node temp = head;
		
		while(temp != null) {
			if(temp.data == num) {
				return temp.data;
			}
			temp = temp.next;
		}
		return 0;
	}
	
	private static Node removehead(Node head) {
		if(head == null) return head;
		head = head.next;
		return head;
	}
	
	private static Node removetail(Node head) {
		Node mover = head;
		while(mover.next.next != null) {
			mover = mover.next;
		}
		mover.next = null;
		return head;
	}
	
	private static Node removeany(Node head,int num) {
		int ctr = 0;
	   	Node temp = head;
		Node prev = null;
		while(temp != null) {
			ctr++;
			if(ctr == num) {
				prev.next = prev.next.next;
				break;
			}
			 
			prev = temp;
			temp = temp.next; 
		}
		return head;
	}
	
	private static Node insertop(Node head, int num) {
		Node a = new Node(num,head);	
		return a;
	}
	
	private static Node insertlast(Node head,int num) {
		Node temp = head;
		Node x = new Node(num);
		while(temp.next!=null) {
			temp = temp.next;
		}
		temp.next = x;
		return head;
	}
	
	private static Node insertbw(Node head, int el,int num) {
		int ctr = 0;
		Node temp = head;
		while(temp != null) {
			ctr++;
			if(ctr == num) {
				Node x = new Node(el,temp.next);
			    temp.next = x;
			    break;
			}
			temp = temp.next;
		}
		return head;
	}
	private static void print(Node head) {
		while(head != null) {
			System.out.print(head.data + " ");
			head = head.next;
		}
		System.out.println();
	}
	
	public static void main(String[] args) {
		int[] arr = {1,2,3,4};
		Node head = Arr_to_ll(arr);
		head = insertbw(head,7,3);
		print(head);
	}
}
